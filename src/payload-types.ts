/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    'products-pages': ProductsPage;
    users: User;
    media: Media;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    'products-pages': ProductsPagesSelect<false> | ProductsPagesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    'home-page': HomePage;
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    'home-page': HomePageSelect<false> | HomePageSelect<true>;
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products-pages".
 */
export interface ProductsPage {
  id: string;
  slug: string;
  title: string;
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'products-pages';
        value: string | ProductsPage;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products-pages_select".
 */
export interface ProductsPagesSelect<T extends boolean = true> {
  slug?: T;
  title?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-page".
 */
export interface HomePage {
  id: string;
  welcome: {
    title: string;
    description?: string | null;
  };
  navigation: {
    link_1: {
      text: string;
      link: string;
      icon: string | Media;
    };
    link_2: {
      text: string;
      link: string;
      icon: string | Media;
    };
    link_3: {
      text: string;
      link: string;
      icon: string | Media;
    };
    link_4: {
      text: string;
      link: string;
      icon: string | Media;
    };
  };
  advantages?: {
    title?: string | null;
    list?:
      | {
          text: string;
          image: string | Media;
          id?: string | null;
        }[]
      | null;
  };
  products?: {
    title?: string | null;
    list?:
      | {
          product: {
            title: string;
            list?:
              | {
                  text: string;
                  image: string | Media;
                  id?: string | null;
                }[]
              | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  partners?: {
    title?: string | null;
    list?:
      | {
          image: string | Media;
          id?: string | null;
        }[]
      | null;
  };
  system_capabilities?: {
    title?: string | null;
    list?:
      | {
          image: string | Media;
          title: string;
          text: string;
          /**
           * Логотипы партнеров (не обязательно)
           */
          logos?:
            | {
                image?: (string | null) | Media;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  faq?: {
    title?: string | null;
    list?:
      | {
          title: string;
          text: string;
          id?: string | null;
        }[]
      | null;
  };
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  nav?:
    | {
        list: {
          title: string;
          links?:
            | {
                text: string;
                link: string;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
      }[]
    | null;
  social?:
    | {
        network: {
          link: string;
          image: string | Media;
        };
        id?: string | null;
      }[]
    | null;
  info?: string | null;
  additional_info?: string | null;
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-page_select".
 */
export interface HomePageSelect<T extends boolean = true> {
  welcome?:
    | T
    | {
        title?: T;
        description?: T;
      };
  navigation?:
    | T
    | {
        link_1?:
          | T
          | {
              text?: T;
              link?: T;
              icon?: T;
            };
        link_2?:
          | T
          | {
              text?: T;
              link?: T;
              icon?: T;
            };
        link_3?:
          | T
          | {
              text?: T;
              link?: T;
              icon?: T;
            };
        link_4?:
          | T
          | {
              text?: T;
              link?: T;
              icon?: T;
            };
      };
  advantages?:
    | T
    | {
        title?: T;
        list?:
          | T
          | {
              text?: T;
              image?: T;
              id?: T;
            };
      };
  products?:
    | T
    | {
        title?: T;
        list?:
          | T
          | {
              product?:
                | T
                | {
                    title?: T;
                    list?:
                      | T
                      | {
                          text?: T;
                          image?: T;
                          id?: T;
                        };
                  };
              id?: T;
            };
      };
  partners?:
    | T
    | {
        title?: T;
        list?:
          | T
          | {
              image?: T;
              id?: T;
            };
      };
  system_capabilities?:
    | T
    | {
        title?: T;
        list?:
          | T
          | {
              image?: T;
              title?: T;
              text?: T;
              logos?:
                | T
                | {
                    image?: T;
                    id?: T;
                  };
              id?: T;
            };
      };
  faq?:
    | T
    | {
        title?: T;
        list?:
          | T
          | {
              title?: T;
              text?: T;
              id?: T;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  nav?:
    | T
    | {
        list?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    text?: T;
                    link?: T;
                    id?: T;
                  };
            };
        id?: T;
      };
  social?:
    | T
    | {
        network?:
          | T
          | {
              link?: T;
              image?: T;
            };
        id?: T;
      };
  info?: T;
  additional_info?: T;
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}